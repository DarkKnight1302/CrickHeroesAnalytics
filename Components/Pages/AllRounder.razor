@page "/AllRounderLeaderboard"
@rendermode InteractiveServer
@using CricHeroesAnalytics.Entities
@using CricHeroesAnalytics.Services.Interfaces
@inject IPlayerAnalyticsService playerService

<div class="bg-animation"></div>

<header class="header">
    <nav class="nav-container">
        <a href="/" class="logo">
            <img src="images/Final_Cult11.png" alt="Cult 11 Logo" class="logo-image">
            <div class="logo-text">CULT 11</div>
        </a>
        <ul class="nav-menu">
            <li><a href="/" class="nav-link">Home</a></li>
            <li><a href="/#caps" class="nav-link">Cap Holders</a></li>
            <li><a href="/#leaderboards" class="nav-link">Leaderboards</a></li>
        </ul>
    </nav>
</header>

<main class="container">
    <section class="leaderboard-page">
        <h2 class="section-title">All-Rounder Leaderboard</h2>

        @if (isLoading)
        {
            <div class="loading">
                <div class="spinner"></div>
            </div>
        }
        else
        {
            <!-- Full Leaderboard Table -->
            <div class="leaderboard-table-container">
                <table class="leaderboard-table">
                    <thead>
                        <tr>
                            <th style="text-align: center; width: 10%;">Rank</th>
                            <th style="width: 40%;">Player</th>
                            <th style="text-align: right; width: 15%;">Batting Avg</th>
                            <th style="text-align: right; width: 15%;">Strike Rate</th>
                            <th style="text-align: right; width: 15%;">Bowling Avg</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var player in players.Select((p, index) => new { Player = p, Rank = index + 1 }))
                        {
                            <tr class="@(player.Rank == 1 ? "rank-1-row" : "")">
                                <td class="rank-cell" data-label="@player.Rank">@player.Rank</td>
                                <td class="player-cell" data-label="Player">
                                    <img src="@player.Player.PlayerProfilePic"
                                         alt="@player.Player.Name"
                                         class="player-profile-img"
                                         onerror="this.onerror=null; this.src='https://placehold.co/60x60/1e293b/f8fafc?text=C11';" />
                                    <div class="player-info">
                                        <a href="@player.Player.PlayerProfile" target="_blank" class="player-link">@player.Player.Name</a>
                                        @if (player.Rank == 1)
                                        {
                                            <span class="cap-icon">🌟</span>
                                        }
                                    </div>
                                </td>
                                <td class="stat-cell" data-label="Batting Avg"><div class="stat-value-wrapper">@player.Player.BattingAverage</div></td>
                                <td class="stat-cell" data-label="Strike Rate"><div class="stat-value-wrapper">@player.Player.StrikeRate</div></td>
                                <td class="stat-cell" data-label="Bowling Avg"><div class="stat-value-wrapper">@player.Player.BowlingAverage</div></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </section>
</main>

<style>
    /* --- Base Styles --- */
    :root {
        --primary-orange: #ff6b35;
        --primary-purple: #8b5cf6;
        --primary-red: #ef4444;
        --dark-bg: #0f172a;
        --card-bg: #1e293b;
        --text-primary: #f8fafc;
        --text-secondary: #94a3b8;
        --gold: #fbbf24;
        --silver: #c0c0c0;
        --bronze: #cd7f32;
        --gradient-1: linear-gradient(135deg, #ff6b35, #f59e0b);
        --gradient-2: linear-gradient(135deg, #8b5cf6, #06b6d4);
        --gradient-3: linear-gradient(135deg, #ef4444, #f97316);
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background: var(--dark-bg);
        color: var(--text-primary);
        line-height: 1.6;
        overflow-x: hidden;
    }

    .bg-animation {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        background: var(--dark-bg);
    }

        .bg-animation::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle at 20% 50%, rgba(255, 107, 53, 0.1) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(139, 92, 246, 0.1) 0%, transparent 50%), radial-gradient(circle at 40% 80%, rgba(239, 68, 68, 0.1) 0%, transparent 50%);
            animation: float 20s ease-in-out infinite;
        }

    @@keyframes float {
        0%, 100%

    {
        transform: translate(0, 0) rotate(0deg);
    }

    33% {
        transform: translate(30px, -30px) rotate(120deg);
    }

    66% {
        transform: translate(-20px, 20px) rotate(240deg);
    }

    }

    .header {
        background: rgba(30, 41, 59, 0.9);
        backdrop-filter: blur(20px);
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        padding: 1rem 0;
        position: sticky;
        top: 0;
        z-index: 100;
    }

    .nav-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        display: flex;
        align-items: center;
        gap: 1rem;
        text-decoration: none;
    }

    .logo-image {
        width: 50px;
        height: 50px;
        object-fit: contain;
    }

    .logo-text {
        font-size: 2rem;
        font-weight: 800;
        background: var(--gradient-1);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .nav-menu {
        display: flex;
        gap: 2rem;
        list-style: none;
    }

    .nav-link {
        color: var(--text-secondary);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        position: relative;
    }

        .nav-link:hover {
            color: var(--text-primary);
            transform: translateY(-2px);
        }

        .nav-link::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--gradient-1);
            transition: width 0.3s ease;
        }

        .nav-link:hover::after {
            width: 100%;
        }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .section-title {
        text-align: center;
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 3rem;
        position: relative;
    }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: var(--gradient-2);
            border-radius: 2px;
        }

    /* --- Loading Spinner --- */
    .loading {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 400px;
    }

    .spinner {
        width: 50px;
        height: 50px;
        border: 3px solid rgba(139, 92, 246, 0.3);
        border-top: 3px solid var(--primary-purple);
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0%

    {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }

    }

    /* --- Styles for Leaderboard Table (Desktop) --- */
    .leaderboard-table-container {
        background: var(--card-bg);
        border-radius: 20px;
        padding: 1rem 2rem;
        border: 1px solid rgba(255, 255, 255, 0.1);
        overflow-x: auto;
    }

    .leaderboard-table {
        width: 100%;
        border-collapse: collapse;
        min-width: 600px;
    }

        .leaderboard-table th, .leaderboard-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }

        .leaderboard-table tbody tr:last-child td {
            border-bottom: none;
        }

        .leaderboard-table thead {
            border-bottom: 2px solid rgba(255, 255, 255, 0.1);
        }

        .leaderboard-table th {
            font-size: 0.9rem;
            text-transform: uppercase;
            color: var(--text-secondary);
            font-weight: 600;
        }

        .leaderboard-table tbody tr {
            transition: background-color 0.3s ease;
        }

            .leaderboard-table tbody tr:not(.rank-1-row):hover {
                background-color: rgba(255, 255, 255, 0.05);
            }

        .leaderboard-table td {
            color: var(--text-primary);
            vertical-align: middle;
        }

    .player-cell {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .player-info {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .player-profile-img {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid rgba(255, 255, 255, 0.1);
    }

    .player-link {
        color: var(--text-primary);
        text-decoration: none;
        font-weight: 500;
        transition: color 0.3s ease;
    }

        .player-link:hover {
            color: var(--primary-purple);
        }

    .leaderboard-table .rank-cell {
        font-weight: 700;
        color: var(--text-secondary);
        font-size: 1.2rem;
        text-align: center;
    }

    .leaderboard-table .stat-cell {
        font-weight: 700;
        font-size: 1.1rem;
        text-align: right;
    }

    .rank-1-row {
        background: linear-gradient(90deg, rgba(139, 92, 246, 0.1), transparent);
    }

        .rank-1-row td {
            font-weight: bold;
        }

        .rank-1-row .rank-cell {
            color: var(--gold);
        }

    .cap-icon {
        font-size: 1.2rem;
        vertical-align: middle;
    }

    /* --- Responsive Styles for Mobile & Tablet --- */
    @@media (max-width: 768px) {
        .nav-menu

    {
        display: none;
    }

    .nav-container {
        padding: 0 1rem;
    }

    .logo-text {
        font-size: 1.5rem;
    }

    .logo-image {
        width: 40px;
        height: 40px;
    }

    .container {
        padding: 1rem;
    }

    .section-title {
        font-size: 2rem;
        margin-bottom: 2rem;
    }

    .leaderboard-table-container {
        padding: 0;
        background: transparent;
        border: none;
    }

    .leaderboard-table, .leaderboard-table thead, .leaderboard-table tbody, .leaderboard-table th, .leaderboard-table td, .leaderboard-table tr {
        display: block;
    }

    .leaderboard-table {
        min-width: unset;
    }

        .leaderboard-table thead {
            display: none;
        }

        .leaderboard-table tr {
            margin-bottom: 1rem;
            border-radius: 10px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            background: var(--card-bg);
            overflow: hidden;
        }

        .leaderboard-table td {
            border: none;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
            position: relative;
            padding: 0.75rem 1rem;
            display: flex;
            align-items: center;
        }

    .stat-cell .stat-value-wrapper {
        margin-left: auto;
        padding-left: 2rem;
    }

    .leaderboard-table tr:last-child {
        margin-bottom: 0;
    }

    .leaderboard-table td:last-child {
        border-bottom: none;
    }

    .leaderboard-table td::before {
        content: attr(data-label);
        font-weight: 600;
        color: var(--text-secondary);
    }

    .leaderboard-table .rank-cell {
        display: none;
    }

    .player-cell {
        order: -1;
        font-size: 1.1rem;
        background: rgba(255, 255, 255, 0.03);
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }

        .player-cell::before {
            content: 'Rank #' attr(data-label);
            font-size: 0.8rem;
            text-transform: uppercase;
            color: var(--text-secondary);
            margin-bottom: 0.25rem;
        }

        .player-cell .player-info {
            width: 100%;
            justify-content: space-between;
        }

    .rank-1-row {
        background: none;
        border-color: var(--gold);
    }

        .rank-1-row .player-cell {
            background: linear-gradient(90deg, rgba(251, 191, 36, 0.1), transparent);
        }

            .rank-1-row .player-cell::before {
                color: var(--gold);
            }

    }
</style>

@code {
    private IEnumerable<Player> players = new List<Player>();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        players = await playerService.GetAllRounderLeaderboard();
        isLoading = false;
        this.StateHasChanged();
    }
}
